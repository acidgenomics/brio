% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basenameSansExt.R
\name{basenameSansExt}
\alias{basenameSansExt}
\title{Get the base name without the file extension}
\usage{
basenameSansExt(path)
}
\arguments{
\item{path}{character vector, containing path names.}
}
\value{
A character vector of the same length as \code{path}.  A zero-length
  input will give a zero-length output with no error.

  Paths not containing any separators are taken to be in the current
  directory, so \code{dirname} returns \code{"."}.

  If an element of \code{path} is \code{\link{NA}}, so is the result.

  \code{""} is not a valid pathname, but is returned unchanged.
}
\description{
\code{basename} removes all of the path up to and including the last
  path separator (if any).

  \code{dirname} returns the part of the \code{path} up to but
  excluding the last path separator, or \code{"."} if there is no path
  separator.
}
\details{
This function is vectorized and supports multiple file paths.
}
\section{Behaviour on Windows}{

  On Windows this will accept either \code{\\} or \code{/} as the path
  separator, but \code{dirname} will return a path using \code{/}
  (except if on a network share, when the leading \code{\\\\} will be
  preserved).  Expect these only to be able to handle complete
  paths, and not for example just a network share or a drive.

  UTF-8-encoded path names not valid in the current locale can be used.

}

\examples{
basenameSansExt(c("dir/file.txt", "dir/archive.tar.gz"))
}
\seealso{
\itemize{
\item \code{\link[base:basename]{basename()}}.
\item \code{tools::file_path_sans_ext()}.
}
}
