% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export-methods.R
\docType{methods}
\name{export}
\alias{export}
\alias{export,ANY-method}
\alias{export,sparseMatrix-method}
\alias{export,SummarizedExperiment-method}
\alias{export,SingleCellExperiment-method}
\title{Export}
\usage{
\S4method{export}{ANY}(x, file, format, ...)

\S4method{export}{sparseMatrix}(x, file, format)

\S4method{export}{SummarizedExperiment}(x, name = NULL, dir = ".",
  compress = FALSE, humanize = FALSE, slotNames = c("assays",
  "colData", "rowData", "Gene2Symbol", "Ensembl2Entrez"))

\S4method{export}{SingleCellExperiment}(x, name = NULL, dir = ".",
  compress = FALSE, humanize = FALSE, slotNames = c("assays",
  "colData", "rowData", "Gene2Symbol", "Ensembl2Entrez"))
}
\arguments{
\item{x}{\code{ANY}.
An object supporting \code{\link[base:dim]{dim()}}, to be written to disk.}

\item{file}{\code{character(1)}.
File path. Specify \code{file} or \code{format} but not both.}

\item{format}{\code{character(1)}.
An optional character string containing the
file format, which can be used to override the format inferred from \code{file},
or in lieu of specifying \code{file}.}

\item{...}{Additional arguments.}

\item{name}{\code{character(1)}.
Name to use on disk. If \code{NULL}, will use the name of the object instead.}

\item{compress}{\code{logical(1)}.
Apply gzip compression to all files.}

\item{humanize}{\code{logical(1)}.
Automatically convert gene IDs to gene symbols in the row names and sample
IDs to sample names in the column names.}

\item{slotNames}{\code{character}.
Names of slots to include when writing to disk.}
}
\value{
Invisible \code{character}.
File path(s).
}
\description{
Export data out of R and write to disk.
}
\details{
This is a wrapper for \code{\link[rio:export]{rio::export()}} that adds support for additional S4
classes in Bioconductor.
}
\section{Row names}{


Some export utilities in R have a tendency to drop row names when writing to
disk in CSV format. For example, the \href{https://readr.tidyverse.org/}{readr} family of functions never
write row names by design. This is a \emph{really poor} default setting for
handling genomic data, which often contain gene identifiers in the row names.
Here we're performing any internal tibble coercion step to ensure row names
are always moved to a "\code{rowname}" column in the CSV export.
}

\examples{
counts <- matrix(data = seq_len(100L), nrow = 10)
export(counts, format = "csv")

## Clean up.
file.remove("counts.csv")
}
\seealso{
\code{\link[rio:export]{rio::export()}}.
}
